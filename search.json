[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A Solid Start to ggplot2",
    "section": "",
    "text": "Preface\nThis tutorial is designed for R users with no experience with ggplot2 or those who have tried to learn but got stuck along the way. It is not designed to be a comprehensive guide but rather to build a solid foundation. It differs from other resources in the following ways:",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#setup",
    "href": "index.html#setup",
    "title": "A Solid Start to ggplot2",
    "section": "Setup",
    "text": "Setup\nAs this is not an introduction to R, you probably already have R installed. If you haven‚Äôt updated R recently, say within the last year, download and install the appropriate version for your operating system from The Comprehensive R Archive Network. If you use RStudio check for updates by clicking ‚ÄúHelp‚Äù ‚ÄúCheck for Updates‚Äù from within the application. Finally, update or install the tidyverse packages by running install.packages(\"tidyverse\"). For all three ‚Äì R, RStudio, tidyverse ‚Äì do not ignore the advice to update!",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#the-basics",
    "href": "index.html#the-basics",
    "title": "A Solid Start to ggplot2",
    "section": "The basics",
    "text": "The basics\nggplot2 is based on a grammar of graphics (the ‚Äúgg‚Äù in ggplot2) which makes it different from graphics programs that are based on chart types. Think of the old style lego kits that give you building blocks with which you can make whatever you want. To make the most of the package, it‚Äôs very helpful to think of it in these terms. Rather than think in terms of names of charts, think in terms of the graphical elements that are needed to create that type of chart. With knowledge of how to put together the basic elements you will be able to create anything you want.\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1¬† Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. ‚ÄúLiterate Programming.‚Äù Comput. J. 27 (2): 97‚Äì111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "grammar.html",
    "href": "grammar.html",
    "title": "2¬† Grammar of graphics",
    "section": "",
    "text": "2.1 Components\nThe grammar of graphics on which ggplot2 is based on‚Ä¶",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Grammar of graphics</span>"
    ]
  },
  {
    "objectID": "layers.html",
    "href": "layers.html",
    "title": "3¬† Layers",
    "section": "",
    "text": "3.1 Data\nThe layers represent the data, what the graph is all about. Everything else‚Äìthe scales, coordinate system, faceting, and themes‚Äìare accessories to make the data clear and comprehensible. Therefore it is essential to get the data right. Even if everything else looks perfect, if the data is wrong the graph is worthless. Each layer consists of five components: 1) data, 2) aesthetic mapping, 3) geom, 4) stat, and 5) position. Most of the time you can rely on the defaults for 4) stat and 5) position, so we‚Äôll start with the first three components, all of which are required.\nggplot2 is designed to work only with data frames. That means no vectors, matrices, tables, or lists. If your data is is not in data frame form, you‚Äôll need to convert it to a data frame first. How can you tell if you have the right format? Use class to check:\nlibrary(ggplot2)\nclass(faithful)\n\n[1] \"data.frame\"\n\nclass(CO2)\n\n[1] \"nfnGroupedData\" \"nfGroupedData\"  \"groupedData\"    \"data.frame\"    \n\nclass(diamonds)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nclass(Titanic)\n\n[1] \"table\"\n\nclass(Seatbelts)\n\n[1] \"mts\"    \"ts\"     \"matrix\" \"array\"\nAs long as data.frame is one of the classes returned, you‚Äôre good to go. So faithful and CO2, two of the built-in base R datasets would work, as would diamonds a dataset that comes with the ggplot2 package. Note that class(diamonds) also returns tbl_df and tbl indications that diamonds is also a tibble, the tidyverse version of a data frame. We‚Äôll return to this topic later. Neither Titanic nor Seatbelts is a data frame so both would produce errors if we tried to create graphs from this data with ggplot2 without converting the data. If you read data from a file with read.csv(), read_csv(), or other functions for reading tabular data, it will be a data.frame.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Layers</span>"
    ]
  },
  {
    "objectID": "layers.html#geoms",
    "href": "layers.html#geoms",
    "title": "3¬† Layers",
    "section": "3.2 Geoms",
    "text": "3.2 Geoms\nGeoms are the heart and soul of graphics made with ggplot2. A ‚Äúgeom‚Äù is short-hand for geometric object, the shapes that represent. We will begin with six commonly used geoms, shown below.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOnce these geoms are mastered, the hope is that it will be easy to learn additional geoms as you‚Äôll know how they work. (Did you know that geom_bar() and geom_col() produce the same visual? We‚Äôll discuss why later.)",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Layers</span>"
    ]
  },
  {
    "objectID": "layers.html#aesthetic-mappings",
    "href": "layers.html#aesthetic-mappings",
    "title": "3¬† Layers",
    "section": "3.3 Aesthetic mappings",
    "text": "3.3 Aesthetic mappings\nAn aesthetic mapping relates visual properties with variables (also called features or columns) in the data. There are a limited number of aesthetic mappings; some of the most common are x, y, color, and fill. For example, to create the following scatterplot, we map x to Income and y to Illiteracy:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor each geom, there is a small set of required mappings and a much larger set of optional mappings. The catch is that sometimes it may not be clear which mappings are required. In this guide we will always make a special point of indicating the required mappings, as this can be a stumbling block for beginners.\n\n\n\n\n\n\nTip\n\n\n\nWhenever you learn a new geom, pay careful attention to the required mappings.\n\n\nLet‚Äôs consider an example. geom_histogram() has one required mapping x or y. A standard histogram with vertical bars is produced by mapping x though there may be circumstances in which a y mapping is desired, for example to create a population pyramid.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Layers</span>"
    ]
  },
  {
    "objectID": "layers.html#continuous-vs.-discrete-mappings",
    "href": "layers.html#continuous-vs.-discrete-mappings",
    "title": "3¬† Layers",
    "section": "3.4 Continuous vs.¬†discrete mappings",
    "text": "3.4 Continuous vs.¬†discrete mappings\n\n\n\n\n\n\nDon‚Äôt skip this section.\n\n\n\nIt‚Äôs really important. ü§ì\n\n\nIn addition to knowing the required mappings, it is critical to know whether the the visual component (x, y, fill, color, etc.) must be mapped to a continuous (think numerical) variable, discrete (think categorical) variable, or either one. If you‚Äôre working with columns in a data frame you will likely know their data types, but there are times when you‚Äôll need to check that the data types are correct. There are many ways to check; depending on the method, continuous columns will be marked as numeric, num, dbl, integer, or dbl. Discrete mappings will appear as: factor, character, chr, Factor, fct, Ord.factor, ord, logi, logical, lgl, to indicate that the variable is a character, factor, or logical. (The differences among the terms within each group are not important at the moment.)\nLet‚Äôs consider the built-in dataset CO2. Try running the code shown below for practice.\nRecall that we first must be sure that we‚Äôre working with a data frame:\n\nclass(CO2)\n\n[1] \"nfnGroupedData\" \"nfGroupedData\"  \"groupedData\"    \"data.frame\"    \n\n\nNow let‚Äôs look at the data types of the columns with str():\n\nstr(CO2)\n\nClasses 'nfnGroupedData', 'nfGroupedData', 'groupedData' and 'data.frame':  84 obs. of  5 variables:\n $ Plant    : Ord.factor w/ 12 levels \"Qn1\"&lt;\"Qn2\"&lt;\"Qn3\"&lt;..: 1 1 1 1 1 1 1 2 2 2 ...\n $ Type     : Factor w/ 2 levels \"Quebec\",\"Mississippi\": 1 1 1 1 1 1 1 1 1 1 ...\n $ Treatment: Factor w/ 2 levels \"nonchilled\",\"chilled\": 1 1 1 1 1 1 1 1 1 1 ...\n $ conc     : num  95 175 250 350 500 675 1000 95 175 250 ...\n $ uptake   : num  16 30.4 34.8 37.2 35.3 39.2 39.7 13.6 27.3 37.1 ...\n - attr(*, \"formula\")=Class 'formula'  language uptake ~ conc | Plant\n  .. ..- attr(*, \".Environment\")=&lt;environment: R_EmptyEnv&gt; \n - attr(*, \"outer\")=Class 'formula'  language ~Treatment * Type\n  .. ..- attr(*, \".Environment\")=&lt;environment: R_EmptyEnv&gt; \n - attr(*, \"labels\")=List of 2\n  ..$ x: chr \"Ambient carbon dioxide concentration\"\n  ..$ y: chr \"CO2 uptake rate\"\n - attr(*, \"units\")=List of 2\n  ..$ x: chr \"(uL/L)\"\n  ..$ y: chr \"(umol/m^2 s)\"\n\n\nNote that both conc and uptake have data type num which is continuous, while Plant, Type and Treatment have data types Factor or Ord.factor which are discrete.\nAnother method is to use glimpse() from the dplyr package, which is similar to str() but shows more data and less attribute information:\n\nlibrary(dplyr)\nglimpse(CO2)\n\nRows: 84\nColumns: 5\n$ Plant     &lt;ord&gt; Qn1, Qn1, Qn1, Qn1, Qn1, Qn1, Qn1, Qn2, Qn2, Qn2, Qn2, Qn2, ‚Ä¶\n$ Type      &lt;fct&gt; Quebec, Quebec, Quebec, Quebec, Quebec, Quebec, Quebec, Queb‚Ä¶\n$ Treatment &lt;fct&gt; nonchilled, nonchilled, nonchilled, nonchilled, nonchilled, ‚Ä¶\n$ conc      &lt;dbl&gt; 95, 175, 250, 350, 500, 675, 1000, 95, 175, 250, 350, 500, 6‚Ä¶\n$ uptake    &lt;dbl&gt; 16.0, 30.4, 34.8, 37.2, 35.3, 39.2, 39.7, 13.6, 27.3, 37.1, ‚Ä¶\n\n\nWe see that glimpse() labels the continuous (numeric) columns as &lt;dbl&gt; rather than num and the discrete columns as &lt;fct&gt; and &lt;ord&gt;. Again, for our purposes, this distinction isn‚Äôt important.\n\n\n\n\n\n\nTip\n\n\n\nView() and head() ‚Äì common methods for looking at data ‚Äì do NOT show data types so should not be used in this situation.\n\n\n\n3.4.1 An example\nSuppose we wish to draw histograms of the continuous variables in the CO2 dataset. Since histogram represents the distribution of a numerical variable and has no meaning for categorical variables, the mapping must be to a numerical variable. Our choices therefore are conc and uptake:\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\n\n¬†\n\n\n\nIf we try to try, though, to draw a histogram of a discrete variable, such as Plant, we‚Äôll get an error:\n\n\nError in `geom_histogram()`:\n! Problem while computing stat.\n‚Ñπ Error occurred in the 1st layer.\nCaused by error in `setup_params()`:\n! `stat_bin()` requires a continuous x aesthetic.\n‚úñ the x aesthetic is discrete.\n‚Ñπ Perhaps you want `stat=\"count\"`?\n\n\nWe‚Äôre ready now to combine the three essentials of a layer‚Äìdata, an aesthetic mapping, and a geom‚Äìto create our first plot.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Layers</span>"
    ]
  },
  {
    "objectID": "layers.html#our-first-plot",
    "href": "layers.html#our-first-plot",
    "title": "3¬† Layers",
    "section": "3.5 Our first plot",
    "text": "3.5 Our first plot\nTo review we said that plots are made up of layers, scales, coordinate systems, faceting, and themes. We begin by focusing on the layers and relying on defaults for all the rest. Each layer we said is composed of data, aesthetic mappings, geoms, stat and position. We will focus on data, aesthetic mappings, and geoms, and rely on defaults for stat and position.\n\n\n\n\n\n\nTip\n\n\n\nAlways start with the geom and ask yourself: what are the required aesthetic mappings?\n\n\nLet‚Äôs make a histogram using the built-in dataset faithful. We confirm that it‚Äôs a data frame and then determine that both variables are continuous (type num) and therefore either would work with geom_histogram(), which as we said requires continuous aesthetic mappings:\n\nclass(faithful)\n\n[1] \"data.frame\"\n\nstr(faithful)\n\n'data.frame':   272 obs. of  2 variables:\n $ eruptions: num  3.6 1.8 3.33 2.28 4.53 ...\n $ waiting  : num  79 54 74 62 85 55 88 85 51 85 ...\n\n\nLet‚Äôs draw a histogram with the waiting variable. We now have everything we need:\n\ndata: faithful\nmapping: x ‚ûû waiting\ngeom: geom_histogram()\n\nAll that‚Äôs left is to convert this to ggplot2 code. Typically the data and mapping are indicated in the call to ggplot() which initializes the plot, and then we add in the geom.\n\nlibrary(ggplot2)\nggplot(data = faithful, mapping = aes(x = waiting)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nAnd we have our first plot! A few things to note:\n\nggplot2 tries its best to teach you how to create good graphs.1 In this case, it is communicating that the default number of bins for histograms drawn with ggplot2 is 30. Rather than rely on the default, you should try different values for binwidth = (or bins = or breaks =) to find one that best captures the shape of the distribution.\nYou cannot start a new line with +. It is good practice to start a new line after every +.\nThis plot isn‚Äôt very pretty. It‚Äôs very tempting to change the colors, font size, etc. but we‚Äôre going to save that for later.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Layers</span>"
    ]
  },
  {
    "objectID": "layers.html#footnotes",
    "href": "layers.html#footnotes",
    "title": "3¬† Layers",
    "section": "",
    "text": "There‚Äôs a long history in R, dating back to the development of its predecessor, S, of following best practices for creating statistic graphics. Many of the help files for base R and ggplot2 plotting functions contain references to research by William Cleveland and others on creating effective graphs. (add references)‚Ü©Ô∏é",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Layers</span>"
    ]
  },
  {
    "objectID": "geoms.html",
    "href": "geoms.html",
    "title": "4¬† Six geoms",
    "section": "",
    "text": "4.1 geom_histogram()",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Six geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#geom_density",
    "href": "geoms.html#geom_density",
    "title": "4¬† Six geoms",
    "section": "4.2 geom_density()",
    "text": "4.2 geom_density()\n\nlibrary(ggplot2)\nggplot(faithful, aes(x = eruptions, y = after_stat(density))) +\n  geom_histogram(breaks = seq(1.5, 5.5, .25), color = \"blue\",\n                 fill = \"cornflowerblue\", alpha = .5) +\n  geom_density(linewidth = 1.5, color = \"red\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Six geoms</span>"
    ]
  },
  {
    "objectID": "acknowledgments.html",
    "href": "acknowledgments.html",
    "title": "5¬† Making this book",
    "section": "",
    "text": "5.1 Colors\nTo add GitHub Actions:\nBlue yellow Color Palette: https://www.color-hex.com/color-palette/80255\nAki no Fujisan Color Palette: https://www.color-hex.com/color-palette/1026103",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Making this book</span>"
    ]
  },
  {
    "objectID": "acknowledgments.html#ggplot2-fonts",
    "href": "acknowledgments.html#ggplot2-fonts",
    "title": "5¬† Making this book",
    "section": "5.2 ggplot2 fonts",
    "text": "5.2 ggplot2 fonts\nCustom fonts https://r-graph-gallery.com/custom-fonts-in-R-and-ggplot2.html\nhttp://www.cookbook-r.com/Graphs/Fonts/\nhttps://www.stat.auckland.ac.nz/~paul/R/fontfamily.pdf",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Making this book</span>"
    ]
  },
  {
    "objectID": "acknowledgments.html#quarto",
    "href": "acknowledgments.html#quarto",
    "title": "5¬† Making this book",
    "section": "5.3 quarto",
    "text": "5.3 quarto\n\n5.3.1 _quarto.yml\nhttps://github.com/hadley/r4ds/blob/main/_quarto.yml\nhttps://github.com/vizdata-s23/vizdata-s23/blob/main/style/sta313.scss",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Making this book</span>"
    ]
  },
  {
    "objectID": "acknowledgments.html#syntax-highlighting",
    "href": "acknowledgments.html#syntax-highlighting",
    "title": "5¬† Making this book",
    "section": "5.4 Syntax highlighting",
    "text": "5.4 Syntax highlighting\nhttps://www.garrickadenbuie.com/blog/pandoc-syntax-highlighting-examples/\nTranslation between syntax highlighting terms and CSS classes: https://raw.githubusercontent.com/tajmone/pandoc-goodies/master/skylighting/css/built-in-styles/zenburn.css",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Making this book</span>"
    ]
  },
  {
    "objectID": "acknowledgments.html#github-actions",
    "href": "acknowledgments.html#github-actions",
    "title": "5¬† Making this book",
    "section": "5.5 GitHub Actions",
    "text": "5.5 GitHub Actions",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Making this book</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. ‚ÄúLiterate Programming.‚Äù Comput.\nJ. 27 (2): 97‚Äì111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "6¬† Required mappings",
    "section": "",
    "text": "GEOM\nREQUIRED MAPPINGS\n\n\n\n\ngeom_abline\nNA\n\n\ngeom_area\nx and y.\n\n\ngeom_bar\nx or y\n\n\ngeom_bin_2d\nx and y.\n\n\ngeom_bin2d\nx and y.\n\n\ngeom_blank\nNA\n\n\ngeom_boxplot\nx or y\n\n\ngeom_col\nx and y.\n\n\ngeom_contour\nx, y, and z.\n\n\ngeom_contour_filled\nx, y, and z.\n\n\ngeom_count\nx and y.\n\n\ngeom_crossbar\nx, y, ymin, and ymax or x, y, xmin, and xmax.\n\n\ngeom_curve\nx, y, and xend or x, y, and yend.\n\n\ngeom_density\nx or y\n\n\ngeom_density_2d\nx and y.\n\n\ngeom_density_2d_filled\nx and y.\n\n\ngeom_density2d\nx and y.\n\n\ngeom_density2d_filled\nx and y.\n\n\ngeom_dotplot\nx.\n\n\ngeom_errorbar\nx, ymin, and ymax or y, xmin, and xmax.\n\n\ngeom_errorbarh\nxmin, xmax, and y.\n\n\ngeom_freqpoly\nx or y\n\n\ngeom_function\nNA\n\n\ngeom_hex\nx and y.\n\n\ngeom_histogram\nx or y\n\n\ngeom_hline\nyintercept.\n\n\ngeom_jitter\nx and y.\n\n\ngeom_label\nx, y, and label.\n\n\ngeom_line\nx and y.\n\n\ngeom_linerange\nx, ymin, and ymax or y, xmin, and xmax.\n\n\ngeom_map\nNA\n\n\ngeom_path\nx and y.\n\n\ngeom_point\nx and y.\n\n\ngeom_pointrange\nx, y, ymin, and ymax or x, y, xmin, and xmax.\n\n\ngeom_polygon\nx and y.\n\n\ngeom_qq\nsample.\n\n\ngeom_qq_line\nsample.\n\n\ngeom_quantile\nx and y.\n\n\ngeom_raster\nx and y.\n\n\ngeom_rect\nxmin, xmax, ymin, and ymax.\n\n\ngeom_ribbon\nx, ymin, and ymax or y, xmin, and xmax.\n\n\ngeom_rug\nNA\n\n\ngeom_segment\nx, y, and xend or x, y, and yend.\n\n\ngeom_sf\nNA\n\n\ngeom_sf_label\ngeometry.\n\n\ngeom_sf_text\ngeometry.\n\n\ngeom_smooth\nx and y.\n\n\ngeom_spoke\nx, y, angle, and radius.\n\n\ngeom_step\nx and y.\n\n\ngeom_text\nx, y, and label.\n\n\ngeom_tile\nx and y.\n\n\ngeom_violin\nx and y.\n\n\ngeom_vline\nxintercept.",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Required mappings</span>"
    ]
  }
]